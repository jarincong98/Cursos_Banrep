%
% Status : main Dynare file
%
% Warning : this file is generated automatically by Dynare
%           from model file (.mod)

clearvars -global
clear_persistent_variables(fileparts(which('dynare')), false)
tic0 = tic;
% Define global variables.
global M_ options_ oo_ estim_params_ bayestopt_ dataset_ dataset_info estimation_info
options_ = [];
M_.fname = 'ModelSOE';
M_.dynare_version = '6.1';
oo_.dynare_version = '6.1';
options_.dynare_version = '6.1';
%
% Some global variables initialization
%
global_initialization;
M_.exo_names = cell(2,1);
M_.exo_names_tex = cell(2,1);
M_.exo_names_long = cell(2,1);
M_.exo_names(1) = {'eps_A'};
M_.exo_names_tex(1) = {'\epsilon^{A}'};
M_.exo_names_long(1) = {'Choque de productividad'};
M_.exo_names(2) = {'eps_T'};
M_.exo_names_tex(2) = {'\epsilon^{T}'};
M_.exo_names_long(2) = {'Choque de T'};
M_.endo_names = cell(13,1);
M_.endo_names_tex = cell(13,1);
M_.endo_names_long = cell(13,1);
M_.endo_names(1) = {'A'};
M_.endo_names_tex(1) = {'A'};
M_.endo_names_long(1) = {'Productividad'};
M_.endo_names(2) = {'Y'};
M_.endo_names_tex(2) = {'Y'};
M_.endo_names_long(2) = {'Producción'};
M_.endo_names(3) = {'Y_rel'};
M_.endo_names_tex(3) = {'Y^{Rel}'};
M_.endo_names_long(3) = {'Producción Rel. al SS'};
M_.endo_names(4) = {'C'};
M_.endo_names_tex(4) = {'C'};
M_.endo_names_long(4) = {'Consumo'};
M_.endo_names(5) = {'I'};
M_.endo_names_tex(5) = {'I'};
M_.endo_names_long(5) = {'Inversión'};
M_.endo_names(6) = {'NX'};
M_.endo_names_tex(6) = {'NX'};
M_.endo_names_long(6) = {'Balanza comercial'};
M_.endo_names(7) = {'B_star'};
M_.endo_names_tex(7) = {'B^{\star}'};
M_.endo_names_long(7) = {'Deuda'};
M_.endo_names(8) = {'R_star'};
M_.endo_names_tex(8) = {'i^{\star}'};
M_.endo_names_long(8) = {'Tasa de interés externa'};
M_.endo_names(9) = {'T'};
M_.endo_names_tex(9) = {'\tau'};
M_.endo_names_long(9) = {'Transferencias'};
M_.endo_names(10) = {'L'};
M_.endo_names_tex(10) = {'L'};
M_.endo_names_long(10) = {'Trabajo'};
M_.endo_names(11) = {'W'};
M_.endo_names_tex(11) = {'W'};
M_.endo_names_long(11) = {'Salario'};
M_.endo_names(12) = {'R_K'};
M_.endo_names_tex(12) = {'R^{K}'};
M_.endo_names_long(12) = {'Renta del capital'};
M_.endo_names(13) = {'K'};
M_.endo_names_tex(13) = {'K'};
M_.endo_names_long(13) = {'Capital'};
M_.endo_partitions = struct();
M_.param_names = cell(14,1);
M_.param_names_tex = cell(14,1);
M_.param_names_long = cell(14,1);
M_.param_names(1) = {'ssigma'};
M_.param_names_tex(1) = {'\sigma'};
M_.param_names_long(1) = {'sigma'};
M_.param_names(2) = {'bbeta'};
M_.param_names_tex(2) = {'\beta'};
M_.param_names_long(2) = {'Factor de descuento'};
M_.param_names(3) = {'ddelta'};
M_.param_names_tex(3) = {'\delta'};
M_.param_names_long(3) = {'Depreciación del capital'};
M_.param_names(4) = {'aalpha'};
M_.param_names_tex(4) = {'\alpha'};
M_.param_names_long(4) = {'Parcipación del capital prod.'};
M_.param_names(5) = {'psi_l'};
M_.param_names_tex(5) = {'\psi^L'};
M_.param_names_long(5) = {'psi'};
M_.param_names(6) = {'eta'};
M_.param_names_tex(6) = {'\eta'};
M_.param_names_long(6) = {'eta'};
M_.param_names(7) = {'rho_a'};
M_.param_names_tex(7) = {'\rho_{A}'};
M_.param_names_long(7) = {'Persistencia de la productividad'};
M_.param_names(8) = {'phi_k'};
M_.param_names_tex(8) = {'\phi^{K}'};
M_.param_names_long(8) = {'Costo de ajuste del capital'};
M_.param_names(9) = {'rho_tau'};
M_.param_names_tex(9) = {'\rho_{\tau}'};
M_.param_names_long(9) = {'Persistencia de T'};
M_.param_names(10) = {'phi_b'};
M_.param_names_tex(10) = {'\phi_{B}'};
M_.param_names_long(10) = {'Elasticidad de la deuda a la tasa'};
M_.param_names(11) = {'A_ss'};
M_.param_names_tex(11) = {'A'};
M_.param_names_long(11) = {'Productividad de est. estacionario'};
M_.param_names(12) = {'B_ss'};
M_.param_names_tex(12) = {'B'};
M_.param_names_long(12) = {'Deuda de est. estacionario'};
M_.param_names(13) = {'T_ss'};
M_.param_names_tex(13) = {'T'};
M_.param_names_long(13) = {'T SS'};
M_.param_names(14) = {'R_star_ss'};
M_.param_names_tex(14) = {'i^{\star}'};
M_.param_names_long(14) = {'Tasa de interés de est. estacionario'};
M_.param_partitions = struct();
M_.exo_det_nbr = 0;
M_.exo_nbr = 2;
M_.endo_nbr = 13;
M_.param_nbr = 14;
M_.orig_endo_nbr = 13;
M_.aux_vars = [];
M_.Sigma_e = zeros(2, 2);
M_.Correlation_matrix = eye(2, 2);
M_.H = 0;
M_.Correlation_matrix_ME = 1;
M_.sigma_e_is_diagonal = true;
M_.det_shocks = [];
M_.surprise_shocks = [];
M_.learnt_shocks = [];
M_.learnt_endval = [];
M_.heteroskedastic_shocks.Qvalue_orig = [];
M_.heteroskedastic_shocks.Qscale_orig = [];
M_.matched_irfs = {};
M_.matched_irfs_weights = {};
options_.linear = false;
options_.block = false;
options_.bytecode = false;
options_.use_dll = false;
options_.ramsey_policy = false;
options_.discretionary_policy = false;
M_.eq_nbr = 13;
M_.ramsey_orig_eq_nbr = 0;
M_.ramsey_orig_endo_nbr = 0;
M_.set_auxiliary_variables = exist(['./+' M_.fname '/set_auxiliary_variables.m'], 'file') == 2;
M_.epilogue_names = {};
M_.epilogue_var_list_ = {};
M_.orig_maximum_endo_lag = 1;
M_.orig_maximum_endo_lead = 1;
M_.orig_maximum_exo_lag = 0;
M_.orig_maximum_exo_lead = 0;
M_.orig_maximum_exo_det_lag = 0;
M_.orig_maximum_exo_det_lead = 0;
M_.orig_maximum_lag = 1;
M_.orig_maximum_lead = 1;
M_.orig_maximum_lag_with_diffs_expanded = 1;
M_.lead_lag_incidence = [
 1 5 0;
 0 6 0;
 0 7 0;
 0 8 18;
 0 9 0;
 0 10 0;
 2 11 0;
 0 12 19;
 3 13 0;
 0 14 0;
 0 15 0;
 0 16 20;
 4 17 21;]';
M_.nstatic = 6;
M_.nfwrd   = 3;
M_.npred   = 3;
M_.nboth   = 1;
M_.nsfwrd   = 4;
M_.nspred   = 4;
M_.ndynamic   = 7;
M_.dynamic_tmp_nbr = [4; 1; 0; 0; ];
M_.equations_tags = {
  1 , 'name' , 'Ley acumu. del capital' ;
  2 , 'name' , 'Oferta de trabajo' ;
  3 , 'name' , 'Ecuación de Euler' ;
  4 , 'name' , 'Demanda de bonos' ;
  5 , 'name' , 'Tasa de interés deuda' ;
  6 , 'name' , 'Función de producción' ;
  7 , 'name' , 'Demanda de capital' ;
  8 , 'name' , 'Demanda de trabajo' ;
  9 , 'name' , 'Demanda agregada' ;
  10 , 'name' , 'Productividad' ;
  11 , 'name' , 'Transferencias' ;
  12 , 'name' , 'Exportaciones netas' ;
  13 , 'name' , 'Producción relativa al SS' ;
};
M_.mapping.A.eqidx = [6 10 ];
M_.mapping.Y.eqidx = [6 7 8 9 12 13 ];
M_.mapping.Y_rel.eqidx = [13 ];
M_.mapping.C.eqidx = [2 3 4 9 12 ];
M_.mapping.I.eqidx = [1 9 12 ];
M_.mapping.NX.eqidx = [12 ];
M_.mapping.B_star.eqidx = [5 9 ];
M_.mapping.R_star.eqidx = [4 5 9 ];
M_.mapping.T.eqidx = [9 11 ];
M_.mapping.L.eqidx = [2 6 8 ];
M_.mapping.W.eqidx = [2 8 ];
M_.mapping.R_K.eqidx = [3 7 ];
M_.mapping.K.eqidx = [1 3 6 7 ];
M_.mapping.eps_A.eqidx = [10 ];
M_.mapping.eps_T.eqidx = [11 ];
M_.static_and_dynamic_models_differ = false;
M_.has_external_function = false;
M_.block_structure.time_recursive = false;
M_.block_structure.block(1).Simulation_Type = 1;
M_.block_structure.block(1).endo_nbr = 2;
M_.block_structure.block(1).mfs = 2;
M_.block_structure.block(1).equation = [ 10 11];
M_.block_structure.block(1).variable = [ 1 9];
M_.block_structure.block(1).is_linear = true;
M_.block_structure.block(1).NNZDerivatives = 4;
M_.block_structure.block(1).bytecode_jacob_cols_to_sparse = [1 2 3 4 ];
M_.block_structure.block(2).Simulation_Type = 8;
M_.block_structure.block(2).endo_nbr = 9;
M_.block_structure.block(2).mfs = 9;
M_.block_structure.block(2).equation = [ 6 8 1 2 9 3 4 5 7];
M_.block_structure.block(2).variable = [ 2 10 5 11 7 13 4 8 12];
M_.block_structure.block(2).is_linear = false;
M_.block_structure.block(2).NNZDerivatives = 32;
M_.block_structure.block(2).bytecode_jacob_cols_to_sparse = [5 6 10 11 12 13 14 15 16 17 18 24 25 26 27 ];
M_.block_structure.block(3).Simulation_Type = 1;
M_.block_structure.block(3).endo_nbr = 2;
M_.block_structure.block(3).mfs = 2;
M_.block_structure.block(3).equation = [ 13 12];
M_.block_structure.block(3).variable = [ 3 6];
M_.block_structure.block(3).is_linear = true;
M_.block_structure.block(3).NNZDerivatives = 2;
M_.block_structure.block(3).bytecode_jacob_cols_to_sparse = [3 4 ];
M_.block_structure.block(1).g1_sparse_rowval = int32([]);
M_.block_structure.block(1).g1_sparse_colval = int32([]);
M_.block_structure.block(1).g1_sparse_colptr = int32([]);
M_.block_structure.block(2).g1_sparse_rowval = int32([5 1 3 6 9 1 2 5 9 1 2 4 3 5 2 4 5 8 3 6 4 5 6 7 5 8 9 6 6 7 7 6 ]);
M_.block_structure.block(2).g1_sparse_colval = int32([5 6 6 6 6 10 10 10 10 11 11 11 12 12 13 13 14 14 15 15 16 16 16 16 17 17 18 24 25 25 26 27 ]);
M_.block_structure.block(2).g1_sparse_colptr = int32([1 1 1 1 1 2 6 6 6 6 10 13 15 17 19 21 25 27 28 28 28 28 28 28 29 31 32 33 ]);
M_.block_structure.block(3).g1_sparse_rowval = int32([]);
M_.block_structure.block(3).g1_sparse_colval = int32([]);
M_.block_structure.block(3).g1_sparse_colptr = int32([]);
M_.block_structure.variable_reordered = [ 1 9 2 10 5 11 7 13 4 8 12 3 6];
M_.block_structure.equation_reordered = [ 10 11 6 8 1 2 9 3 4 5 7 13 12];
M_.block_structure.incidence(1).lead_lag = -1;
M_.block_structure.incidence(1).sparse_IM = [
 1 13;
 3 13;
 6 13;
 7 13;
 9 7;
 10 1;
 11 9;
];
M_.block_structure.incidence(2).lead_lag = 0;
M_.block_structure.incidence(2).sparse_IM = [
 1 5;
 1 13;
 2 4;
 2 10;
 2 11;
 3 4;
 3 13;
 4 4;
 5 7;
 5 8;
 6 1;
 6 2;
 6 10;
 7 2;
 7 12;
 8 2;
 8 10;
 8 11;
 9 2;
 9 4;
 9 5;
 9 7;
 9 8;
 9 9;
 10 1;
 11 9;
 12 2;
 12 4;
 12 5;
 12 6;
 13 2;
 13 3;
];
M_.block_structure.incidence(3).lead_lag = 1;
M_.block_structure.incidence(3).sparse_IM = [
 3 4;
 3 12;
 3 13;
 4 4;
 4 8;
];
M_.block_structure.dyn_tmp_nbr = 6;
M_.state_var = [1 9 7 13 ];
M_.maximum_lag = 1;
M_.maximum_lead = 1;
M_.maximum_endo_lag = 1;
M_.maximum_endo_lead = 1;
oo_.steady_state = zeros(13, 1);
M_.maximum_exo_lag = 0;
M_.maximum_exo_lead = 0;
oo_.exo_steady_state = zeros(2, 1);
M_.params = NaN(14, 1);
M_.endo_trends = struct('deflator', cell(13, 1), 'log_deflator', cell(13, 1), 'growth_factor', cell(13, 1), 'log_growth_factor', cell(13, 1));
M_.NNZDerivatives = [46; -1; -1; ];
M_.dynamic_g1_sparse_rowval = int32([10 9 11 1 3 6 7 6 10 6 7 8 9 12 13 13 2 3 4 9 12 1 9 12 12 5 9 5 9 9 11 2 6 8 2 8 7 1 3 3 4 4 3 3 10 11 ]);
M_.dynamic_g1_sparse_colval = int32([1 7 9 13 13 13 13 14 14 15 15 15 15 15 15 16 17 17 17 17 17 18 18 18 19 20 20 21 21 22 22 23 23 23 24 24 25 26 26 30 30 34 38 39 40 41 ]);
M_.dynamic_g1_sparse_colptr = int32([1 2 2 2 2 2 2 3 3 4 4 4 4 8 10 16 17 22 25 26 28 30 32 35 37 38 40 40 40 40 42 42 42 42 43 43 43 43 44 45 46 47 ]);
M_.lhs = {
'I'; 
'psi_l*L^eta'; 
'(C(1)/C)^ssigma*(1+phi_k*(K-K(-1)))'; 
'(C(1)/C)^ssigma'; 
'R_star'; 
'Y'; 
'R_K'; 
'W'; 
'B_star+I+C'; 
'A'; 
'T'; 
'NX'; 
'Y_rel'; 
};
M_.static_tmp_nbr = [3; 0; 0; 0; ];
M_.block_structure_stat.block(1).Simulation_Type = 3;
M_.block_structure_stat.block(1).endo_nbr = 1;
M_.block_structure_stat.block(1).mfs = 1;
M_.block_structure_stat.block(1).equation = [ 3];
M_.block_structure_stat.block(1).variable = [ 12];
M_.block_structure_stat.block(2).Simulation_Type = 3;
M_.block_structure_stat.block(2).endo_nbr = 1;
M_.block_structure_stat.block(2).mfs = 1;
M_.block_structure_stat.block(2).equation = [ 4];
M_.block_structure_stat.block(2).variable = [ 8];
M_.block_structure_stat.block(3).Simulation_Type = 3;
M_.block_structure_stat.block(3).endo_nbr = 1;
M_.block_structure_stat.block(3).mfs = 1;
M_.block_structure_stat.block(3).equation = [ 5];
M_.block_structure_stat.block(3).variable = [ 7];
M_.block_structure_stat.block(4).Simulation_Type = 3;
M_.block_structure_stat.block(4).endo_nbr = 1;
M_.block_structure_stat.block(4).mfs = 1;
M_.block_structure_stat.block(4).equation = [ 10];
M_.block_structure_stat.block(4).variable = [ 1];
M_.block_structure_stat.block(5).Simulation_Type = 3;
M_.block_structure_stat.block(5).endo_nbr = 1;
M_.block_structure_stat.block(5).mfs = 1;
M_.block_structure_stat.block(5).equation = [ 11];
M_.block_structure_stat.block(5).variable = [ 9];
M_.block_structure_stat.block(6).Simulation_Type = 6;
M_.block_structure_stat.block(6).endo_nbr = 6;
M_.block_structure_stat.block(6).mfs = 6;
M_.block_structure_stat.block(6).equation = [ 6 7 8 9 2 1];
M_.block_structure_stat.block(6).variable = [ 2 13 11 4 10 5];
M_.block_structure_stat.block(7).Simulation_Type = 1;
M_.block_structure_stat.block(7).endo_nbr = 2;
M_.block_structure_stat.block(7).mfs = 2;
M_.block_structure_stat.block(7).equation = [ 13 12];
M_.block_structure_stat.block(7).variable = [ 3 6];
M_.block_structure_stat.variable_reordered = [ 12 8 7 1 9 2 13 11 4 10 5 3 6];
M_.block_structure_stat.equation_reordered = [ 3 4 5 10 11 6 7 8 9 2 1 13 12];
M_.block_structure_stat.incidence.sparse_IM = [
 1 5;
 1 13;
 2 4;
 2 10;
 2 11;
 3 12;
 4 8;
 5 7;
 5 8;
 6 1;
 6 2;
 6 10;
 6 13;
 7 2;
 7 12;
 7 13;
 8 2;
 8 10;
 8 11;
 9 2;
 9 4;
 9 5;
 9 7;
 9 8;
 9 9;
 10 1;
 11 9;
 12 2;
 12 4;
 12 5;
 12 6;
 13 2;
 13 3;
];
M_.block_structure_stat.tmp_nbr = 4;
M_.block_structure_stat.block(1).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(1).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(1).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(2).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(2).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(2).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(3).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(3).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(3).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(4).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(4).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(4).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(5).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(5).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(5).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(6).g1_sparse_rowval = int32([1 2 3 4 1 2 6 3 5 4 5 1 3 5 4 6 ]);
M_.block_structure_stat.block(6).g1_sparse_colval = int32([1 1 1 1 2 2 2 3 3 4 4 5 5 5 6 6 ]);
M_.block_structure_stat.block(6).g1_sparse_colptr = int32([1 5 8 10 12 15 17 ]);
M_.block_structure_stat.block(7).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(7).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(7).g1_sparse_colptr = int32([]);
M_.static_g1_sparse_rowval = int32([6 10 6 7 8 9 12 13 13 2 9 12 1 9 12 12 5 9 4 5 9 9 11 2 6 8 2 8 3 7 1 6 7 ]);
M_.static_g1_sparse_colval = int32([1 1 2 2 2 2 2 2 3 4 4 4 5 5 5 6 7 7 8 8 8 9 9 10 10 10 11 11 12 12 13 13 13 ]);
M_.static_g1_sparse_colptr = int32([1 3 9 10 13 16 17 19 22 24 27 29 31 34 ]);
M_.params(1) = 2;
ssigma = M_.params(1);
M_.params(2) = 0.98;
bbeta = M_.params(2);
M_.params(3) = 0.1;
ddelta = M_.params(3);
M_.params(4) = 0.3;
aalpha = M_.params(4);
M_.params(5) = 1;
psi_l = M_.params(5);
M_.params(6) = 5;
eta = M_.params(6);
M_.params(8) = 0.1;
phi_k = M_.params(8);
M_.params(11) = 1;
A_ss = M_.params(11);
M_.params(12) = (-0.25);
B_ss = M_.params(12);
M_.params(13) = 0;
T_ss = M_.params(13);
M_.params(14) = 1/M_.params(2)-1;
R_star_ss = M_.params(14);
M_.params(7) = ParamsInDynare;
rho_a = M_.params(7);
M_.params(9) = 0.75;
rho_tau = M_.params(9);
M_.params(10) = (-0.05);
phi_b = M_.params(10);
model_diagnostics(M_,options_,oo_);
options_resid_ = struct();
display_static_residuals(M_, options_, oo_, options_resid_);
oo_.dr.eigval = check(M_,options_,oo_);
steady;
%
% SHOCKS instructions
%
M_.exo_det_length = 0;
M_.Sigma_e(1, 1) = (1)^2;
options_.irf = 20;
options_.nograph = true;
options_.noprint = true;
options_.order = 1;
var_list_ = {};
[info, oo_, options_, M_] = stoch_simul(M_, options_, oo_, var_list_);
write_latex_parameter_table;
write_latex_definitions;
collect_latex_files;


oo_.time = toc(tic0);
disp(['Total computing time : ' dynsec2hms(oo_.time) ]);
if ~exist([M_.dname filesep 'Output'],'dir')
    mkdir(M_.dname,'Output');
end
save([M_.dname filesep 'Output' filesep 'ModelSOE_results.mat'], 'oo_', 'M_', 'options_');
if exist('estim_params_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'ModelSOE_results.mat'], 'estim_params_', '-append');
end
if exist('bayestopt_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'ModelSOE_results.mat'], 'bayestopt_', '-append');
end
if exist('dataset_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'ModelSOE_results.mat'], 'dataset_', '-append');
end
if exist('estimation_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'ModelSOE_results.mat'], 'estimation_info', '-append');
end
if exist('dataset_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'ModelSOE_results.mat'], 'dataset_info', '-append');
end
if exist('oo_recursive_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'ModelSOE_results.mat'], 'oo_recursive_', '-append');
end
if exist('options_mom_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'ModelSOE_results.mat'], 'options_mom_', '-append');
end
if ~isempty(lastwarn)
  disp('Note: warning(s) encountered in MATLAB/Octave code')
end
